---
swagger: "2.0"
info:
  description: "This is Swagger UI environment generated for the TM Forum Intent Management\
    \ API specification"
  version: "4.0.1"
  title: "Intent Managenment"
host: "serverRoot:8080"
basePath: "/tmf-api/intent/v4/"
tags:
- name: "intent"
- name: "intentReport"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "https"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /intent:
    get:
      tags:
      - "intent"
      summary: "List or find Intent objects"
      description: "This operation list or find Intent entities"
      operationId: "listIntent"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Intent"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Intent"
    post:
      tags:
      - "intent"
      summary: "Creates a Intent"
      description: "This operation creates a Intent entity."
      operationId: "createIntent"
      parameters:
      - in: "body"
        name: "intent"
        description: "The Intent to be created"
        required: true
        schema:
          $ref: "#/definitions/Intent_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Intent"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Intent"
  /intent/{id}:
    get:
      tags:
      - "intent"
      summary: "Retrieves a Intent by ID"
      description: "This operation retrieves a Intent entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveIntent"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Intent"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Intent"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Intent"
    delete:
      tags:
      - "intent"
      summary: "Deletes a Intent"
      description: "This operation deletes a Intent entity."
      operationId: "deleteIntent"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Intent"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Intent"
    patch:
      tags:
      - "intent"
      summary: "Updates partially a Intent"
      description: "This operation updates partially a Intent entity."
      operationId: "patchIntent"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Intent"
        required: true
        type: "string"
      - in: "body"
        name: "intent"
        description: "The Intent to be updated"
        required: true
        schema:
          $ref: "#/definitions/Intent_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/Intent"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Intent"
  /intent/{intentId}/intentReport:
    get:
      tags:
      - "intentReport"
      summary: "List or find IntentReport objects"
      description: "This operation list or find IntentReport entities"
      operationId: "listIntentReport"
      parameters:
      - name: "intentId"
        in: "path"
        description: "Identifier of the parent Intent entity"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IntentReport"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "IntentReport"
  /intent/{intentId}/intentReport/{id}:
    get:
      tags:
      - "intentReport"
      summary: "Retrieves a IntentReport by ID"
      description: "This operation retrieves a IntentReport entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveIntentReport"
      parameters:
      - name: "intentId"
        in: "path"
        description: "Identifier of the parent Intent entity"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Identifier of the IntentReport"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/IntentReport"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "IntentReport"
    delete:
      tags:
      - "intentReport"
      summary: "Deletes a IntentReport"
      description: "This operation deletes a IntentReport entity."
      operationId: "deleteIntentReport"
      parameters:
      - name: "intentId"
        in: "path"
        description: "Identifier of the parent Intent entity"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Identifier of the IntentReport"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "IntentReport"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/intentCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IntentCreateEvent"
      description: "Example of a client listener for receiving the notification IntentCreateEvent"
      operationId: "listenToIntentCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IntentCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/intentChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IntentChangeEvent"
      description: "Example of a client listener for receiving the notification IntentChangeEvent"
      operationId: "listenToIntentChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IntentChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/intentDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IntentDeleteEvent"
      description: "Example of a client listener for receiving the notification IntentDeleteEvent"
      operationId: "listenToIntentDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IntentDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/intentReportCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IntentReportCreateEvent"
      description: "Example of a client listener for receiving the notification IntentReportCreateEvent"
      operationId: "listenToIntentReportCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IntentReportCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/intentReportChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IntentReportChangeEvent"
      description: "Example of a client listener for receiving the notification IntentReportChangeEvent"
      operationId: "listenToIntentReportChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IntentReportChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/intentReportDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IntentReportDeleteEvent"
      description: "Example of a client listener for receiving the notification IntentReportDeleteEvent"
      operationId: "listenToIntentReportDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IntentReportDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  Addressable:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
    description: "Base schema for adressable entities"
  BestIntent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Best Intent instance is the formal description of all expectations\
      \ including requirements, goals, and constraints given to a technical system"
  Entity:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base entity schema for use in TMForum Open-APIs"
  EntityRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Entity reference schema to be use for all entityRef class."
  Expression:
    type: "object"
    properties:
      expressionValue:
        type: "string"
        description: "The serialized Expression language of the intent serialized."
      expressionLanguage:
        type: "string"
        description: "The language used for the ExpressionValue."
      iri:
        type: "string"
        description: "Internationalized Resource Identifier of the intent Expression"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Expression is the ontology-encoded form of the Intent"
    example:
      iri: "iri"
      '@baseType': "@baseType"
      '@type': "@type"
      expressionValue: "expressionValue"
      expressionLanguage: "expressionLanguage"
      '@schemaLocation': "http://example.com/aeiou"
  Extensible:
    type: "object"
    properties:
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base Extensible schema for use in TMForum Open-APIs"
  Intent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
        enum:
        - "Intent"
        - "ProbeIntent"
        - "JudgeIntent"
        - "BestIntent"
    description: "An Intent instance is the formal description of all expectations\
      \ including requirements, goals, and constraints given to a technical system"
    example:
      expression:
        iri: "iri"
        '@baseType': "@baseType"
        '@type': "@type"
        expressionValue: "expressionValue"
        expressionLanguage: "expressionLanguage"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "Intent"
      description: "description"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      version: "version"
      statusChangeDate: "2000-01-23T04:56:07.000+00:00"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  Intent_Create:
    type: "object"
    required:
    - "expression"
    - "name"
    properties:
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Intent instance is the formal description of all expectations\
      \ including requirements, goals, and constraints given to a technical system\n\
      Skipped properties: id,href"
    example:
      statusChangeDate: "2000-01-23T04:56:07.000+00:00"
      expression:
        iri: "iri"
        '@baseType': "@baseType"
        '@type': "@type"
        expressionValue: "expressionValue"
        expressionLanguage: "expressionLanguage"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  Intent_Update:
    type: "object"
    properties:
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Intent instance is the formal description of all expectations\
      \ including requirements, goals, and constraints given to a technical system\n\
      Skipped properties: id,href"
    example:
      statusChangeDate: "2000-01-23T04:56:07.000+00:00"
      expression:
        iri: "iri"
        '@baseType': "@baseType"
        '@type': "@type"
        expressionValue: "expressionValue"
        expressionLanguage: "expressionLanguage"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  IntentRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Intent reference, for when Intent is used by other entities"
  IntentRefOrValue:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Intent Ref (if Intent already exists) or Value (if Intent be created\
      \ or its details be presented)"
    example:
      '@referredType': "@referredType"
      expression:
        iri: "iri"
        '@baseType': "@baseType"
        '@type': "@type"
        expressionValue: "expressionValue"
        expressionLanguage: "expressionLanguage"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      version: "version"
      statusChangeDate: "2000-01-23T04:56:07.000+00:00"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  IntentReport:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this intent report"
      description:
        type: "string"
        description: "The description of the intent report."
      name:
        type: "string"
        description: "The name of the intent report."
      expression:
        description: "An Intent Report contains a set of expectations expressed  (Expression)\
          \ in statements using a particular espressionLanguage. This attribute captures\
          \ the intent report expressed by the TM Forum Intent Ontology (TIO) as is\
          \ stored as a string. The Expression is the formal statement of the intent\
          \ and contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      intent:
        $ref: "#/definitions/IntentRefOrValue"
      validFor:
        description: "The period for which this intent report is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "IntentReport is the mechanism to report back to Intent owner on\
      \ an Intents status"
    example:
      expression:
        iri: "iri"
        '@baseType': "@baseType"
        '@type': "@type"
        expressionValue: "expressionValue"
        expressionLanguage: "expressionLanguage"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      name: "name"
      description: "description"
      id: "id"
      href: "http://example.com/aeiou"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      intent:
        '@referredType': "@referredType"
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        statusChangeDate: "2000-01-23T04:56:07.000+00:00"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  JudgeIntent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Judge Intent instance is the formal description of all expectations\
      \ including requirements, goals, and constraints given to a technical system"
  ProbeIntent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date and time of the creation of this Intent"
      description:
        type: "string"
        description: "The description of the intent."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this Intent"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this Intent"
      name:
        type: "string"
        description: "The name of the intent."
      statusChangeDate:
        type: "string"
        format: "date-time"
        description: "A date time( DateTime). The date that the entity status changed\
          \ to the current one"
      version:
        type: "string"
        description: "A field that identifies the specific version of an instance\
          \ of an entity. If not specified version is defaulted to 1.0"
      expression:
        description: "An Intent contains a set of expectations expressed  (expression)\
          \ in statements using a particular expressionLanguage. This attribute captures\
          \ the intent expressed by the TM Forum Intent Ontology (TIO) as is stored\
          \ as a string. The Expression is the formal statement of the intent and\
          \ contains all the information that describes the complete intent."
        $ref: "#/definitions/Expression"
      validFor:
        description: "The period for which this intent is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Probe Intent instance is the formal description of all expectations\
      \ including requirements, goals, and constraints given to a technical system"
  TimePeriod:
    type: "object"
    properties:
      endDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "Start of the time period, using IETC-RFC-3339 format"
    description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
      \ only, or both"
    example:
      startDateTime: "1985-04-12T23:20:50.52Z"
      endDateTime: "1985-04-12T23:20:50.52Z"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  IntentCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IntentCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        intent:
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "Intent"
          description: "description"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          version: "version"
          statusChangeDate: "2000-01-23T04:56:07.000+00:00"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IntentCreateEventPayload:
    type: "object"
    properties:
      intent:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Intent"
    description: "The event data structure"
    example:
      intent:
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "Intent"
        description: "description"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        statusChangeDate: "2000-01-23T04:56:07.000+00:00"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  IntentChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IntentChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        intent:
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "Intent"
          description: "description"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          version: "version"
          statusChangeDate: "2000-01-23T04:56:07.000+00:00"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IntentChangeEventPayload:
    type: "object"
    properties:
      intent:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Intent"
    description: "The event data structure"
    example:
      intent:
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "Intent"
        description: "description"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        statusChangeDate: "2000-01-23T04:56:07.000+00:00"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  IntentDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IntentDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        intent:
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "Intent"
          description: "description"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          version: "version"
          statusChangeDate: "2000-01-23T04:56:07.000+00:00"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IntentDeleteEventPayload:
    type: "object"
    properties:
      intent:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Intent"
    description: "The event data structure"
    example:
      intent:
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "Intent"
        description: "description"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        version: "version"
        statusChangeDate: "2000-01-23T04:56:07.000+00:00"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  IntentReportCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IntentReportCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        intentReport:
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          description: "description"
          id: "id"
          href: "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          intent:
            '@referredType': "@referredType"
            expression:
              iri: "iri"
              '@baseType': "@baseType"
              '@type': "@type"
              expressionValue: "expressionValue"
              expressionLanguage: "expressionLanguage"
              '@schemaLocation': "http://example.com/aeiou"
            lifecycleStatus: "lifecycleStatus"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "description"
            creationDate: "2000-01-23T04:56:07.000+00:00"
            version: "version"
            statusChangeDate: "2000-01-23T04:56:07.000+00:00"
            '@baseType': "@baseType"
            lastUpdate: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IntentReportCreateEventPayload:
    type: "object"
    properties:
      intentReport:
        description: "The involved resource data for the event"
        $ref: "#/definitions/IntentReport"
    description: "The event data structure"
    example:
      intentReport:
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        intent:
          '@referredType': "@referredType"
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          version: "version"
          statusChangeDate: "2000-01-23T04:56:07.000+00:00"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  IntentReportChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IntentReportChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        intentReport:
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          description: "description"
          id: "id"
          href: "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          intent:
            '@referredType': "@referredType"
            expression:
              iri: "iri"
              '@baseType': "@baseType"
              '@type': "@type"
              expressionValue: "expressionValue"
              expressionLanguage: "expressionLanguage"
              '@schemaLocation': "http://example.com/aeiou"
            lifecycleStatus: "lifecycleStatus"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "description"
            creationDate: "2000-01-23T04:56:07.000+00:00"
            version: "version"
            statusChangeDate: "2000-01-23T04:56:07.000+00:00"
            '@baseType': "@baseType"
            lastUpdate: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IntentReportChangeEventPayload:
    type: "object"
    properties:
      intentReport:
        description: "The involved resource data for the event"
        $ref: "#/definitions/IntentReport"
    description: "The event data structure"
    example:
      intentReport:
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        intent:
          '@referredType': "@referredType"
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          version: "version"
          statusChangeDate: "2000-01-23T04:56:07.000+00:00"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  IntentReportDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IntentReportDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        intentReport:
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          description: "description"
          id: "id"
          href: "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          intent:
            '@referredType': "@referredType"
            expression:
              iri: "iri"
              '@baseType': "@baseType"
              '@type': "@type"
              expressionValue: "expressionValue"
              expressionLanguage: "expressionLanguage"
              '@schemaLocation': "http://example.com/aeiou"
            lifecycleStatus: "lifecycleStatus"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "description"
            creationDate: "2000-01-23T04:56:07.000+00:00"
            version: "version"
            statusChangeDate: "2000-01-23T04:56:07.000+00:00"
            '@baseType': "@baseType"
            lastUpdate: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IntentReportDeleteEventPayload:
    type: "object"
    properties:
      intentReport:
        description: "The involved resource data for the event"
        $ref: "#/definitions/IntentReport"
    description: "The event data structure"
    example:
      intentReport:
        expression:
          iri: "iri"
          '@baseType': "@baseType"
          '@type': "@type"
          expressionValue: "expressionValue"
          expressionLanguage: "expressionLanguage"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        intent:
          '@referredType': "@referredType"
          expression:
            iri: "iri"
            '@baseType': "@baseType"
            '@type': "@type"
            expressionValue: "expressionValue"
            expressionLanguage: "expressionLanguage"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          version: "version"
          statusChangeDate: "2000-01-23T04:56:07.000+00:00"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "string"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "string"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
