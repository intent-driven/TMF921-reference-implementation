@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix icm: <http://tio.models.tmforum.org/tio/v1.0.0/IntentCommonModel#> .
@prefix imo: <http://tio.models.tmforum.org/tio/v1.0.0/IntentManagementOntology#> .
@prefix pbi: <http://tio.models.tmforum.org/tio/v1.0.0/ProposalBestIntent#> .
@prefix cat: <http://www.operator.com/Catalog#> .
@prefix spot: <http://www.sdo1.org/Models/DynamicpriceOntology#> .
@prefix met: <http://www.sdo2.org/TelecomMetrics/Version_1.0#> .
@prefix   t: <http://www.w3.org/2006/time#> .
@prefix  ex: <http://www.example.org/IntentNamespace#> .
@prefix iv: <https://tmforum.org/2021/07/intentValidity#> .
@prefix itv: <https://tmforum.org/2021/07/intentTemporalValidity#> .
@prefix cem:  <http://tio.labs.tmforum.org/tio/v1.0.0/CatalystExtensionModel#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
#  This is the Spot Price Bid Request from PSE Customer to the BSS layer
#  CloudBlue: use Capability versus Product. Capability is an "abstract product in the marketplace, that is
no tied to a single Operator.
#  Decision go with Capability.  (Reminder: check Doug's blog!  Capability is also being done in ontology also TIO and CO!!  No Catalog!)
# Introduce a  class called Capability. A Taxonomy (hierarchy)   of capabilities with subclasses.. Joerg: this is why we have 2 ways of defining
# DeliveryExpectation..by pointer to catalog or Class  "DeliveryType". Current approach is Catalog-driven....
#
# --- B1 Intent - this is a SET INTENT Operation ( dont use  BEST )----------
# if we use a BEST we would only get reports on price....its still a hyposthetic "what-if" scenario.
# whereas, set is a active intent..
ex:B1_PSE_Biz_Intent1
 a icm:Intent ;
   rdfs:comment "'Intent for ordering connectivity service via dynamic pricing'";
   imo:intentOwner ex:IntentManagerXYZ;
   cem:layer "'business'";
   icm:hasExpectation ex:PSE_Exp_delivery,
                        ex:PSE_Capability_delivery_Param_type,
                        ex:PSE_spot_price_bid_proposal,
                        ex:PSE_Exp_reporting; 
   iv:hasValidity ex:PSE_temporalvalidity
 .
#
# How to model the fact we want the Intent NOW but we are willing to wait???  Don't use Validity use intentreport degradation
# Overridding of rejection (TODO: Joerg)

# --- Delivery Expectation ----------
ex:PSE_Exp_delivery
 a icm:DeliveryExpectation ;
   icm:target _:capability ;
   icm:params ex:PSE_Capability_delivery_Param_type;
.
ex:PSE_Capability_delivery_Param_type
 a icm:DeliveryParam ;
   icm:targetDescription cat:ConnectivityService_DynamicPrice 
.

# --- Proposal Expectation ----------
# Joerg: don't try to do negotiation in The expectation!
# This is only the Requirement - Ask for it first!
# Ask for reports on the current Price!  10$, 11$ , etc...
# proposing 10$/hour
ex:PSE_spot_price_bid_proposal
 a pbi:PropertyExpectation ;
   icm:target _:capability ;
   icm:params ex:PSE_Exp_property_Param_price ; 
.
#  in this expectation, there is an *implied* threshold...
#  the maximum price is $10 and using spot:value
#  proposingFrequency determines how often you want updates on current price...
#   (Kevin: this is our Gold standard EXPECTATION: everyone needs to know this!!!!)
ex:PSE_Exp_property_Param_price
 a pbi:PropertyParam ;
   spot:price [ icm:atMost [ spot:value "'10'" ; spot:unit spot:unitDollarHour  ] ];
   pbi:proposingTime pbi:ProposeImmediately ;
   pbi:proposingFrequency [ a t:Duration ; t:numericDuration "'1'" ; t:temporalUnit t:unitHour ] 
.

# --- Property Expectation ----------
ex:PSE_Exp_property
 a icm:PropertyExpectation ;
   icm:target _:capability ;
   icm:params ex:PSE_Exp_property_Param_bandwidth , 
               ex:PSE_Exp_property_Param_fromLocation ,
               ex:PSE_Exp_property_Param_toLocation ;
.
ex:PSE_Exp_property_Param_bandwidth  
 a icm:PropertyParam ;  
   met:bandwidth [ icm:atLeast [ met:value "1" ; met:unit met:unitGBPS  ] ] ;
.
ex:PSE_Exp_property_Param_fromLocation
 a icm:PropertyParam ;
   spot:startLocation [ icm:exactly "'locationA'" ] ;
.
ex:PSE_Exp_property_Param_toLocation
 a icm:PropertyParam ;
   spot:endLocation [ icm:exactly "'locationB'" ] ;
.

# --- Reporting Expectation ----------
ex:PSE_Exp_reporting
 a icm:ReportingExpectation ;
   icm:target ex:B1_PSE_Biz_Intent1 ;
   icm:params ex:PSE_Exp_reporting_Param_interval,
               ex:PSE_Exp_reporting_Param_event ;
.
ex:PSE_Exp_reporting_Param_interval
 a icm:ReportingParam ;
   icm:reportingInterval [ a t:Duration ;
                                t:numericDuration "'10'" ;
                                t:temporalUnit t:unitMinute ] .
ex:PSE_Exp_reporting_Param_event              
 a icm:ReportingParam ; 
   icm:reportingEvent icm:ReportingIntervalExpired ,
                        icm:IntentRejected ,
                        icm:StateComplies ,
                        icm:StateDegrades ,
                        icm:HandlingEnded ,
                        icm:UpdateRejected ,
                        icm:UpdateFinished  ;
.
