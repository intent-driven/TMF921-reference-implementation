@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix  icm: <http://tio.models.tmforum.org/tio/v1.0.0/IntentCommonModel#> .
@prefix  imo: <http://tio.models.tmforum.org/tio/v1.0.0/IntentManagementOntology#> .
@prefix  pbi: <http://tio.models.tmforum.org/tio/v1.0.0/ProposalBestIntent#> .
@prefix  cat: <http://www.operator.com/Catalog#> .
@prefix spot: <http://www.sdo1.org/Models/DynamicpriceOntology#> .
@prefix  met: <http://www.sdo2.org/TelecomMetrics/Version_1.0#> .
@prefix    t: <http://www.w3.org/2006/time#> .
@prefix   ex: <http://www.example.org/IntentNamespace#> .
@prefix   iv: <https://tmforum.org/2021/07/intentValidity#> .
@prefix  itv: <https://tmforum.org/2021/07/intentTemporalValidity#> .
@prefix  cem: <http://tio.labs.tmforum.org/tio/v1.0.0/CatalystExtensionModel#> .
@prefix  xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix  arc: <http://tio.models.tmforum.org/tio/v1.0.0/IntentAcceptanceControl/> .

##### Intent ##################################################################
#
#  This intent represents the Spot Price Bid Request from PSE (Price Sentitive
#  Enterprize) Customer to the business layer.
#  It is the B1 intent in the IDAN Catalyst Phase 2
#
#  The PSE customer orders a capability to be delivered. A capability is an 
#  abstract product that is not directly mapped to the product offering of a 
#  single service provider. It can rather be delivered by the capability 
#  marketplace choosing an appropriate product from any of the associated
#  service providers. 
#
#  This intent provides the requirements for choosing a service/product from
#  a service provider that would deliver the wanted capability with respect to
#  functional and non-functional requirements:
#
#  Functional requirement: 
#       -> Connectivity shall be provided between two sites
#
#  Non Functional requirements:
#       -> A minimum bandwidth of 1 GBit/s shall be available
#       -> The price shall not exceed 10 USD/h
#
#  Intent reports would keep the intent owner informed about current handling
#  state. This includes current values for the property parameters regarding
#  price and available bandwidth.
#
#  The customer is ok with the capability not delivered immediately. This 
#  means the customer is fine with a degraded intent. In order to emsure
#  that the intent handler does not reject the itnent, becasue it cannot
#  immediately fulfill it, the intent acceptence and rejection control 
#  extension model is used to override certain rejection reasons. 
#  
ex:B1_PSE_Biz_Intent1
  a icm:Intent ;
  rdfs:comment "Intent for ordering connectivity service via dynamic pricing" ;
  imo:intentOwner ex:IMF_Customer1 ;
  cem:layer "business" ;
  arc:intentRejectionReasonOverride imo:SuccessfulHandlingNotExpected ;
  arc:updateRejectionReasonOverride imo:SuccessfulHandlingNotExpected ;
  icm:hasExpectation ex:B1E1_delivery ,
                     ex:B1E2_property ,
                     ex:B1E3_reporting ; 
.

##### Targets #################################################################
#
# The latest intent common model introduced target objects to be used instead 
# of blank nodes. The target specifies the collection of resources to be used,
# or a condition for selection that involves a set of resources to choose from. 
# In this example the target does not prescribe resources, but allows a 
# selection of exactly one resource from the Collection of all resources. 
#
# To be compliant the resource selected to be used needs to fulfill the
# Target condition as well as the requirements defined by expectations. 
# The delivery expectation mainly steers the target resource selection, but
# practically the intent handler would choose a resource that is overall
# preferential. This can mean it chooses a resource that is the cheapest one,
# which would allow to meet all expectations. 
#
# The target used here specifies a condition for selectable resources.
# It tells that exactly one of the resources from a container can be selected. 
# Thisdeliberately leaves a choice to the intent handler. 
# Here, the container to choose from is determined by the condition property
# icm:elementType. This means all individuals of the specified class are 
# elements of that container. Here, the container contains all resources. 
# This is the widest possible defintion, because everything is a resource in 
# rdf. 
# This means that the target defintion tells to choose exactly one element
# from the container of all resources and use that to fulfill the expextations 
# associated with this target.
#
# The target itself is otherwise an empty container, because a choice of 
# resources was not yet done when creating the intent. The intent report
# will however drop the condition and provide a concrete container of 
# resources that were selected. 
#
# The second target is a container with the intent itself as single member
# it does not leave any choice and just tells that the report shall be 
# about the intent.
#
ex:T1_Capability 
  a icm:IndividualTarget ;
  icm:OneElementOf [ icm:elementType rdf:Resource ] ;
.
ex:T2_B1_Reporting
  a icm:IndividualTarget ;
  rdfs:member ex:B1_PSE_Biz_Intent1 ;
. 

##### Delivery Expectation and Parameters #####################################
#
# The delivery expectation is mainly concerned to specify that something needs 
# to be delivered. Delivery usually involves providing access to a service,
# product or capability and this typically requires that resources need to be
# used to provide it.
#
# A delivery expectation is therefore concerned with two main questions:
#
# 1. What is the thing that needs to be delivered?
#    This constitutes a functional requirement, becasue it is about the
#    nature of the needed thing.  
#    -> Catalog Based.  The intent common model allows to refer to an external 
#                       description of that thing. This can, for example, be 
#                       a service description in a catalog. 
#    -> Ontology Based. The second way to define the nature of the thing to 
#                       be delivered is by requireing that this thing is an
#                       object of a particular class within the ontology.
#    
# 2. Under which conditions shall the delivery happen?
#    The delivery might be conditional and therefore the thing shall only be 
#    delivered if a given condition holds.
#
# The delivery expectaion in this intent refers to a capability description 
# in the marketplace catalog for specifying what needs to be delivered. This 
# intent also uses a type/class based specification of what shall be deliverd.
# This means we are demonstrating a combined a catalog and ontology based 
# approach. 
#
# The delivery expectation practically steers the selection of target
# resources to be used to deliver the wanted thing. In this case the target 
# is an empty container, meaning there is not a fixed resource 
# pre-determined to be used. Instead the target specifies the conditions for 
# valid resources.
#
# The system is compliant to a delivery expectation if the respective 
# resources, which were selected to fulfill this delivery, meet the 
# requirements of the delivery expectation. This means they comply to an 
# external description of the thing to be delivered and/or they are objects
# of a required class. Furthermore the condition for delivery needs to be met
# for compliance. 
#
ex:B1E1_delivery
  a icm:DeliveryExpectation ;
  icm:target ex:T1_Capability ;
  icm:allOf [ rdfs:member ex:B1P1_delivery_type ;
              rdfs:member ex:B1P2_delivery_condition ;
			] ;
.

# Select a resource (service, product) according to the description in the 
# catalog. Furthermore the resource ahsll be an object of a class in the 
# ontology
ex:B1P1_delivery_type
  a icm:Parameter ;
  icm:deliveryDescription cat:Connectivity_DynamicPrice ; 
  icm:deliveryType ex:ConnectivityCapability_DynamicPrice ; 
.

# Only deliver if target resources can be selected that would meet the
# condition. This means the observation is associated with the target.
# If no suitable target resource is available to make this observation, the 
# parameter would be evaluated as not compliant. 
ex:B1P2_delivery_condition ;
  a icm:Parameter ;
  icm:observation [ icm:latestValueOf spot:Price ] ;
  icm:atMost [ icm:value 10 ;
               spot:unit spot:unitDollarHour ;
			 ] ;
.

##### Proposal Expectation ####################################################
# Not needed, becasue the regular reporting would already provide the 
# information needed about current price.


##### Property Expectation ####################################################
# A property expectation allwos to define requirements based on observable 
# properties of the system setting goal/target values and thresholds for these
# properties. 
# The vocabulary of the intent common model allws to express this by defining
# the condition under which the system would be considered compliant. 
# The condition can be based on individual target values versus an observation,
# and it can be based on collection/set logic. 
# 
# This example defines three property based requirements and all of them need 
# to be fulfilled to consider the system compliant to the property expectation.
# 
ex:B1E2_property
  a icm:PropertyExpectation ;
  icm:target ex:T1_Capability ;
  icm:allOf [ rdfs:member ex:B1P3_price ;
              rdfs:member ex:B1P4_bandwidth ;
              rdfs:member ex:B1P5_location ;
			] ;
.

# Price based condition. The system is compliant if the price of the target 
# is below 10 USD per hour. 
# This requirement might be redundent here, becasue it is already a delivery 
# condition. A non compliant delivery condition would stop the delivery. 
# The same condition within a property expectation would not imply if it shall
# delivered or not. It would only indicate that ther emight be problem with 
# the delivered thing. So there is a semantic difference. 
ex:B1P3_price
  a icm:Parameter ;
  icm:observation [ icm:latestValueOf spot:Price ] ;
  icm:atMost [ icm:value 10 ;
               spot:unit spot:unitDollarHour ;
			 ] ;
.
# The wanted connectivity capability shall allow usage of at least 1 GBit/s
# As the used metric measures the overall bandwidth acorss all users, the
# requirement is also about the accumulated available bandwidth. 
# Please note that this requirement would only fail if there is acutually 
# demand above 1Gbit/s. This is implied by using an available Bandwidth
# metric, rather than a current bandwidth.  
# unit80000 usues a unit string according to ISO/IEC 80000 standard
ex:B1P4_bandwidth
  a icm:Parameter ;  
  icm:observation [ icm:latestValueOf met:AvailableBandwidth ] ;
  icm:atLeast [ icm:value 1 ;
                icm:unit80000 "GBit/s" ;
			  ] ;
.

# There is an collextion of all connected locations. This compliance condition
# states that the set of all locations that shall be connected is included in
# the set of all connected locations. 
ex:B1P5_location
  a icm:Parameter ;
  icm:subjectContainer [ rdf:member "'locationA'" ;
                         rdf:member "'locationB'" ;
                       ] ;
  icm:includedIn met:ConnectedLocations ;
.

#### Reporting Expectation ####################################################
#
# Ask for reporting about key events and regular reports every 10 minutes
#
# The scope of the reporting is the entire intent as indicated by the target
#
# The receiver of the report is the itnent managment Function of Customer1. It
# is represented by the resource ex:IMF_Customer1.
#
# icm:NewEventTypes is a container of types (classes) of the events that
# were observed since last report. A report shall be created if this container 
# intersects with the container of those event types a report is wanted for.
# Compliance is reached if the report is creatred and received. 
# 
# icm:reportingInterval is a context. It sets a timer for interval based 
# reporting. This timer will generate an event of class 
# icm:reportingIntercalExpired
# Multiple of these timers can be specified, but here we only use one. 
# Compliance is reached if the event is correctly issued. 
# 
# Speech Bubble: Sent a report about the intent to intent owner if since last 
# report any of these events were observed. Also set a timer for regular
# reporting.
#
ex:B1E3_reporting
  a icm:ReportingExpectation ;
  icm:target ex:T2_B1_reporting ;
  icm:receiver ex:IMF_Customer1 ;
  icm:allOf [ rdfs:member ex:B1P6_reporting ;
            ] ;
  icm:reportingInterval [ a t:Duration ;
                          t:numericDuration "'10'" ;
                          t:temporalUnit t:unitMinute ;
    					] ;
.

ex:B1P6_reporting
  a icm:Parameter ;
  icm:subjectContainer icm:NewEventTypes ;
  intersectWith [ rdf:li icm:ReportingIntervalExpired ;
                  rdf:li icm:IntentRejected ;
                  rdf:li icm:StateComplies ;
                  rdf:li icm:StateDegrades ;
                  rdf:li icm:HandlingEnded ;
                  rdf:li icm:UpdateRejected ;
                  rdf:li icm:UpdateFinished  ;
                ] ;
.


