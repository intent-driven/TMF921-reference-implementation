{
  "statusChangeDate": "2022-07-23T04:56:07.000+00:00",
  "expression": {
    "iri": "http://tio.models.tmforum.org/tio/v2.0.0/IntentCommonModel",
    "@baseType": "Expression",
    "@type": "TurtleExpression",
    "expressionLanguage": "Turtle",
    "expressionValue": "@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix  icm: <http://tio.models.tmforum.org/tio/v1.0.0/IntentCommonModel#> .\n@prefix  imo: <http://tio.models.tmforum.org/tio/v1.0.0/IntentManagementOntology#> .\n@prefix  pbi: <http://tio.models.tmforum.org/tio/v1.0.0/ProposalBestIntent#> .\n@prefix  cat: <http://www.operator.com/Catalog#> .\n@prefix spot: <http://www.sdo1.org/Models/DynamicpriceOntology#> .\n@prefix  met: <http://www.sdo2.org/TelecomMetrics/Version_1.0#> .\n@prefix    t: <http://www.w3.org/2006/time#> .\n@prefix   ex: <http://www.example.org/IntentNamespace#> .\n@prefix   iv: <https://tmforum.org/2021/07/intentValidity#> .\n@prefix  itv: <https://tmforum.org/2021/07/intentTemporalValidity#> .\n@prefix  cem: <http://tio.labs.tmforum.org/tio/v1.0.0/CatalystExtensionModel#> .\n@prefix  xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix  arc: <http://tio.models.tmforum.org/tio/v1.0.0/IntentAcceptanceControl/> .\n\n##### Intent ##################################################################\n#\n#  This intent represents the Spot Price Bid Request from PSE (Price Sentitive\n#  Enterprize) Customer to the business layer.\n#  It is the B1 intent in the IDAN Catalyst Phase 2\n#\n#  The PSE customer orders a capability to be delivered. A capability is an \n#  abstract product that is not directly mapped to the product offering of a \n#  single service provider. It can rather be delivered by the capability \n#  marketplace choosing an appropriate product from any of the associated\n#  service providers. \n#\n#  This intent provides the requirements for choosing a service/product from\n#  a service provider that would deliver the wanted capability with respect to\n#  functional and non-functional requirements:\n#\n#  Functional requirement: \n#       -> Connectivity shall be provided between two sites\n#\n#  Non Functional requirements:\n#       -> A minimum bandwidth of 1 GBit/s shall be available\n#       -> The price shall not exceed 10 USD/h\n#\n#  Intent reports would keep the intent owner informed about current handling\n#  state. This includes current values for the property parameters regarding\n#  price and available bandwidth.\n#\n#  The customer is ok with the capability not delivered immediately. This \n#  means the customer is fine with a degraded intent. In order to emsure\n#  that the intent handler does not reject the itnent, becasue it cannot\n#  immediately fulfill it, the intent acceptence and rejection control \n#  extension model is used to override certain rejection reasons. \n#  \nex:B1_PSE_Biz_Intent1\n  a icm:Intent ;\n  rdfs:comment \"'Intent for ordering connectivity service via dynamic pricing'\" ;\n  imo:intentOwner ex:PSE_Customer ;\n  cem:layer \"'business'\" ;\n  arc:intentRejectionReasonOverride imo:SuccessfulHandlingNotExpected ;\n  arc:updateRejectionReasonOverride imo:SuccessfulHandlingNotExpected ;\n  icm:hasExpectation ex:B1E1_delivery ,\n                     ex:B1E2_property ,\n                     ex:B1E3_reporting ; \n.\n\n##### Targets #################################################################\n#\n# The latest intent common model introduced target objects to be used instead \n# of blank nodes. The target specifies the collection of resources to be used,\n# or a condition for selection that involves a set of resources to choose from. \n# In this example the target does not prescribe resources, but allows a \n# selection of exactly one resource from the Collection of all resources. \n#\n# To be compliant the resource selected to be used needs to fulfill the\n# Target condition as well as the requirements defined by expectations. \n# The delivery expectation mainly steers the target resource selection, but\n# practically the intent handler would choose a resource that is overall\n# preferential. This can mean it chooses a resource that is the cheapest one,\n# which would allow to meet all expectations. \n#\n# The target used here specifies a condition for selectable resources.\n# It tells that exactly one of the resources from a container can be selected. \n# Thisdeliberately leaves a choice to the intent handler. \n# Here, the container to choose from is determined by the condition property\n# icm:elementType. This means all individuals of the specified class are \n# elements of that container. Here, the container contains all resources. \n# This is the widest possible defintion, because everything is a resource in \n# rdf. \n# This means that the target defintion tells to choose exactly one element\n# from the container of all resources and use that to fulfill the expextations \n# associated with this target.\n#\n# The target itself is otherwise an empty container, because a choice of \n# resources was not yet done when creating the intent. The intent report\n# will however drop the condition and provide a concrete container of \n# resources that were selected. \n#\n# The second target is a container with the intent itself as single member\n# it does not leave any choice and just tells that the report shall be \n# about the intent.\n#\nex:T1_Capability \n  a icm:IndividualTarget ;\n  icm:OneElementOf [ icm:elementType rdf:Resource ] ;\n.\nex:T2_B1_Reporting\n  a icm:IndividualTarget ;\n  rdfs:member ex:B1_PSE_Biz_Intent1 ;\n. \n\n##### Delivery Expectation and Parameters #####################################\n#\n# The delivery expectation is mainly concerned to specify that something needs \n# to be delivered. Delivery usually involves providing access to a service,\n# product or capability and this typically requires that resources need to be\n# used to provide it.\n#\n# A delivery expectation is therefore concerned with two main questions:\n#\n# 1. What is the thing that needs to be delivered?\n#    This constitutes a functional requirement, becasue it is about the\n#    nature of the needed thing.  \n#    -> Catalog Based.  The intent common model allows to refer to an external \n#                       description of that thing. This can, for example, be \n#                       a service description in a catalog. \n#    -> Ontology Based. The second way to define the nature of the thing to \n#                       be delivered is by requireing that this thing is an\n#                       object of a particular class within the ontology.\n#    \n# 2. Under which conditions shall the delivery happen?\n#    The delivery might be conditional and therefore the thing shall only be \n#    delivered if a given condition holds.\n#\n# The delivery expectaion in this intent refers to a capability description \n# in the marketplace catalog for specifying what needs to be delivered. This \n# intent also uses a type/class based specification of what shall be deliverd.\n# This means we are demonstrating a combined a catalog and ontology based \n# approach. \n#\n# The delivery expectation practically steers the selection of target\n# resources to be used to deliver the wanted thing. In this case the target \n# is an empty container, meaning there is not a fixed resource \n# pre-determined to be used. Instead the target specifies the conditions for \n# valid resources.\n#\n# The system is compliant to a delivery expectation if the respective \n# resources, which were selected to fulfill this delivery, meet the \n# requirements of the delivery expectation. This means they comply to an \n# external description of the thing to be delivered and/or they are objects\n# of a required class. Furthermore the condition for delivery needs to be met\n# for compliance. \n#\nex:B1E1_delivery\n  a icm:DeliveryExpectation ;\n  icm:target ex:T1_Capability ;\n  icm:allOf [ rdfs:member ex:B1P1_delivery_type ;\n              rdfs:member ex:B1P2_delivery_condition ;\n         ] ;\n.\n\n# Select a resource (service, product) according to the description in the \n# catalog. Furthermore the resource shall be an object of a class in the \n# ontology.  . This showcases the flexible approach of using ontology with a catalog approach\nex:B1P1_delivery_type\n  a icm:Parameter ;\n  icm:deliveryDescription cat:Connectivity_DynamicPrice ; \n  icm:deliveryType ex:ConnectivityCapability_DynamicPrice ; \n.\n\n# Only deliver if target resources can be selected that would meet the\n# condition. This means the observation is associated with the target.\n# If no suitable target resource is available to make this observation, the \n# parameter would be evaluated as not compliant. \nex:B1P2_delivery_condition \n  a icm:Parameter ;\n  icm:observation [ icm:latestValueOf spot:Price ] ;\n  icm:atMost [ icm:value 10 ;\n               spot:unit spot:unitDollarHour ;\n          ] ;\n.\n\n##### Proposal Expectation ####################################################\n# Not needed, because the regular reporting would already provide the\n# information needed about current price.\n\n\n##### Property Expectation ####################################################\n# A property expectation always to define requirements based on observable\n# properties of the system setting goal/target values and thresholds for these\n# properties. \n# The vocabulary of the intent common model allws to express this by defining\n# the condition under which the system would be considered compliant. \n# The condition can be based on individual target values versus an observation,\n# and it can be based on collection/set logic. \n# \n# This example defines three property based requirements and all of them need \n# to be fulfilled to consider the system compliant to the property expectation.\n# \nex:B1E2_property\n  a icm:PropertyExpectation ;\n  icm:target ex:T1_Capability ;\n  icm:allOf [ rdfs:member ex:B1P3_price ;\n              rdfs:member ex:B1P4_bandwidth ;\n              rdfs:member ex:B1P5_location ;\n         ] ;\n.\n\n# Price based condition. The system is compliant if the price of the target \n# is below 10 USD per hour. \n# This requirement might be redundant here, because it is already a delivery\n# condition. A non compliant delivery condition would stop the delivery. \n# The same condition within a property expectation would not imply if it shall\n# delivered or not. It would only indicate that there might be problem with\n# the delivered thing. So there is a semantic difference. \nex:B1P3_price\n  a icm:Parameter ;\n  icm:observation [ icm:latestValueOf spot:Price ] ;\n  icm:atMost [ icm:value 10 ;\n               spot:unit spot:unitDollarHour ;\n          ] ;\n.\n# The wanted connectivity capability shall allow usage of at least 1 GBit/s\n# As the used metric measures the overall bandwidth acorss all users, the\n# requirement is also about the accumulated available bandwidth. \n# Please note that this requirement would only fail if there is acutually \n# demand above 1Gbit/s. This is implied by using an available Bandwidth\n# metric, rather than a current bandwidth.  \n# unit80000 usues a unit string according to ISO/IEC 80000 standard\nex:B1P4_bandwidth\n  a icm:Parameter ;  \n  icm:observation [ icm:latestValueOf met:AvailableBandwidth ] ;\n  icm:atLeast [ icm:value 1 ;\n                icm:unit80000 \"'GBit/s'\" ;\n           ] ;\n.\n# There is an collection of all connected locations. This compliance condition\n# states that the set of all locations that shall be connected is included in\n# the set of all connected locations. \nex:B1P5_location\n  a icm:Parameter ;\n  icm:subjectContainer [ rdf:member \"'locationA'\" ;\n                         rdf:member \"'locationB'\" ;\n                       ] ;\n  icm:includedIn met:ConnectedLocations ;\n.\n\n#### Reporting Expectation ####################################################\n#\n# Ask for reporting about key events and regular reports every 10 minutes\n#\n# The scope of the reporting is the entire intent as indicated by the target\n#\n# The receiver of the report is the intent management Function of Customer1. It\n# is represented by the resource ex:IMF_Customer1.\n#\n# icm:NewEventTypes is a container of types (classes) of the events that\n# were observed since last report. A report shall be created if this container \n# intersects with the container of those event types a report is wanted for.\n# Compliance is reached if the report is created and received.\n# \n# icm:reportingInterval is a context. It sets a timer for interval based \n# reporting. This timer will generate an event of class \n# icm:reportingIntervalExpired\n# Multiple of these timers can be specified, but here we only use one. \n# Compliance is reached if the event is correctly issued. \n# \n# Speech Bubble: Sent a report about the intent to intent owner if since last \n# report any of these events were observed. Also set a timer for regular\n# reporting.\n#\nex:B1E3_reporting\n  a icm:ReportingExpectation ;\n  icm:target ex:T2_B1_reporting ;\n  icm:receiver ex:IMF_Customer1 ;\n  icm:allOf [ rdfs:member ex:B1P6_reporting ;\n            ] ;\n  icm:reportingInterval [ a t:Duration ;\n                          t:numericDuration \"'10'\" ;\n                          t:temporalUnit t:unitMinute ;\n                   ] ;\n.\n\nex:B1P6_reporting\n  a icm:Parameter ;\n  icm:subjectContainer icm:NewEventTypes ;\n  icm:intersectWith [ rdf:li icm:ReportingIntervalExpired ;\n                  rdf:li icm:IntentRejected ;\n                  rdf:li icm:StateComplies ;\n                  rdf:li icm:StateDegrades ;\n                  rdf:li icm:HandlingEnded ;\n                  rdf:li icm:UpdateRejected ;\n                  rdf:li icm:UpdateFinished  ;\n                ] ;\n.\n",
    "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/TurtleExpression.schema.json"
  },
  "lifecycleStatus": "Created",
  "@baseType": "Intent",
  "validFor": {
    "startDateTime": "2022-04-12T23:20:50.52Z",
    "endDateTime": "2023-04-12T23:20:50.52Z"
  },
  "@type": "Intent",
  "lastUpdate": "2022-01-23T04:56:07.000+00:00",
  "name": "B1_catalyst_business_intent",
  "description": "B1_Catalyst_Biz_Intent",
  "creationDate": "2022-01-23T04:56:07.000+00:00",
  "@schemaLocation": "https://mycsp.com:8080/tmf-api/schema/Common/TurtleExpression.schema.json",
  "version": "1"
}